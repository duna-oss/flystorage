name: Tests

on:
  workflow_call:
    secrets:
      GCS_KEY_CONTENTS:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      AZURE_DSN:
        required: true
    inputs:
      os:
        required: true
        type: string
      runtime:
        required: true
        type: string
      versions:
        required: true
        type: string
      experimental:
        required: false
        type: boolean
        default: false

#permissions:
#  id-token: write # This is required for requesting the JWT
#  contents: read  # This is required for actions/checkout
#  pull-requests: read # Required for change detection

jobs:
  run-tests:
    runs-on: ${{ inputs.os }}
    continue-on-error: ${{ inputs.experimental }}
    strategy:
      matrix:
        version: ${{ fromJSON(inputs.versions) }}
    name: ${{ inputs.os }} - ${{ inputs.runtime }} - ${{ matrix.version }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v5

      - name: Install Node.js
        if: inputs.runtime == 'node'
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.version }}
      - uses: ./.github/actions/install-dependencies
        if: inputs.runtime == 'node'
        name: Install NPM dependencies
        with:
          cache-key: ${{inputs.os}}-${{inputs.runtime}}-npm-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          cache-restore-keys: ${{inputs.os}}-${{inputs.runtime}}-npm-${{ matrix.node }}

      - uses: oven-sh/setup-bun@v2
        if: inputs.runtime == 'bun'
        with:
          bun-version: ${{ inputs.version }}
      - name: Install NPM dependencies using Bun
        if: inputs.runtime == 'bun'
        run: bun install

      - name: Configure GCP access
        run: |
          echo $CONTENTS > google-cloud-service-account.json
        env:
          CONTENTS: "${{ secrets.GCS_KEY_CONTENTS }}"

      - name: Run relevant tests
        run: "npm run test"
        if: inputs.runtime == 'node'
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          AWS_REGION: "${{ secrets.AWS_REGION }}"
          AZURE_DSN: "${{ secrets.AZURE_DSN }}"
      - name: Run relevant tests using Bun
        run: |
          npm run build:only
          bun test packages
        if: inputs.runtime == 'bun'
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          AWS_REGION: "${{ secrets.AWS_REGION }}"
          AZURE_DSN: "${{ secrets.AZURE_DSN }}"
      - name: Delete GCP access
        if: always()
        run: |
          node_modules/.bin/rimraf google-cloud-service-account.json

